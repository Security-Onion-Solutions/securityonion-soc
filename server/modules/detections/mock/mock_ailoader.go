// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/security-onion-solutions/securityonion-soc/server/modules/detections (interfaces: AiLoader)
//
// Generated by this command:
//
//	mockgen -destination mock/mock_ailoader.go -package mock . AiLoader
//
// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/security-onion-solutions/securityonion-soc/model"
	gomock "go.uber.org/mock/gomock"
)

// MockAiLoader is a mock of AiLoader interface.
type MockAiLoader struct {
	ctrl     *gomock.Controller
	recorder *MockAiLoaderMockRecorder
}

// MockAiLoaderMockRecorder is the mock recorder for MockAiLoader.
type MockAiLoaderMockRecorder struct {
	mock *MockAiLoader
}

// NewMockAiLoader creates a new mock instance.
func NewMockAiLoader(ctrl *gomock.Controller) *MockAiLoader {
	mock := &MockAiLoader{ctrl: ctrl}
	mock.recorder = &MockAiLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAiLoader) EXPECT() *MockAiLoaderMockRecorder {
	return m.recorder
}

// LoadAuxilleryData mocks base method.
func (m *MockAiLoader) LoadAuxilleryData(arg0 []*model.AiSummary) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadAuxilleryData", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadAuxilleryData indicates an expected call of LoadAuxilleryData.
func (mr *MockAiLoaderMockRecorder) LoadAuxilleryData(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadAuxilleryData", reflect.TypeOf((*MockAiLoader)(nil).LoadAuxilleryData), arg0)
}
