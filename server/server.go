// Copyright 2019 Jason Ertel (github.com/jertel).
// Copyright 2020-2023 Security Onion Solutions LLC and/or licensed to Security Onion Solutions LLC under one
// or more contributor license agreements. Licensed under the Elastic License 2.0 as shown at
// https://securityonion.net/license; you may not use this file except in compliance with the
// Elastic License 2.0.

package server

import (
	"context"
	"errors"
	"os/exec"
	"strings"

	"github.com/go-chi/chi"
	"github.com/security-onion-solutions/securityonion-soc/config"
	"github.com/security-onion-solutions/securityonion-soc/licensing"
	"github.com/security-onion-solutions/securityonion-soc/model"
	"github.com/security-onion-solutions/securityonion-soc/rbac"
	"github.com/security-onion-solutions/securityonion-soc/web"

	"github.com/apex/log"
)

const AGENT_ID = "agent"

type Server struct {
	Config           *config.ServerConfig
	Host             *web.Host
	Datastore        Datastore
	AdminUserstore   AdminUserstore
	Userstore        Userstore
	Rolestore        Rolestore
	Eventstore       Eventstore
	Casestore        Casestore
	Configstore      Configstore
	GridMembersstore GridMembersstore
	Metrics          Metrics
	stoppedChan      chan bool
	Authorizer       rbac.Authorizer
	Agent            *model.User
	Context          context.Context
}

func NewServer(cfg *config.ServerConfig, version string) *Server {
	server := &Server{
		Config:      cfg,
		Host:        web.NewHost(cfg.BindAddress, cfg.HtmlDir, cfg.IdleConnectionTimeoutMs, version, cfg.SrvKeyBytes, AGENT_ID),
		stoppedChan: make(chan bool, 1),
	}
	server.initContext()

	licensing.ValidateSocUrl(server.Config.BaseUrl)

	return server
}

func (server *Server) initContext() {
	// Server will retain the role of an agent until there's a need for higher privileges
	server.Agent = model.NewUser()
	server.Agent.Id = AGENT_ID
	server.Agent.Email = server.Agent.Id
	server.Context = context.WithValue(context.Background(), web.ContextKeyRequestor, server.Agent)
}

func (server *Server) Start() {
	if server.Datastore == nil {
		log.Error("Datastore module has not been initialized; ensure a valid datastore module has been defined in the configuration")
	} else {
		log.Info("Starting server")

		r := chi.NewMux()

		r.Use(web.Middleware(server.Host, false))

		RegisterCaseRoutes(server, r, "/api/case")
		RegisterEventRoutes(server, r, "/api/events")
		RegisterInfoRoutes(server, r, "/api/info")
		RegisterJobRoutes(server, r, "/api/job")
		RegisterJobsRoutes(server, r, "/api/jobs")
		RegisterPacketRoutes(server, r, "/api/packets")
		RegisterQueryRoutes(server, r, "/api/query")
		RegisterNodeRoutes(server, r, "/api/node")
		RegisterGridRoutes(server, r, "/api/grid")
		RegisterStreamRoutes(server, r, "/api/stream")
		RegisterUsersRoutes(server, r, "/api/users")
		RegisterConfigRoutes(server, r, "/api/config")
		RegisterGridMemberRoutes(server, r, "/api/gridmembers")
		RegisterRolesRoutes(server, r, "/api/roles")
		RegisterUtilRoutes(server, r, "/api/util")

		server.Host.RegisterRouter("/api/", r)

		server.Host.Start()
	}

	server.stoppedChan <- true
}

func (server *Server) Stop() {
	if server.Host != nil {
		log.Info("Stopping server")
		server.Host.Stop()
	}
}

func (server *Server) Wait() {
	<-server.stoppedChan
}

func (server *Server) CheckAuthorized(ctx context.Context, operation string, target string) error {
	var err error
	if server.Authorizer == nil {
		if server.Config.DeveloperEnabled {
			log.Info("Using developer mode; all authorization requests will succeed")
		} else {
			log.Warn("No authorizer module has been configured; assuming no authorization")
			err = errors.New("Missing Authorizer module")
		}
	} else {
		err = server.Authorizer.CheckContextOperationAuthorized(ctx, operation, target)
	}
	return err
}

func (server *Server) GetTimezones() []string {
	var zones []string = make([]string, 0, 0)
	bytes, err := exec.Command(server.Config.TimezoneScript).Output()
	if err == nil {
		output := string(bytes)
		if strings.Contains(output, "America/New_York") {
			zones = strings.Split(output, "\n")
		} else {
			log.WithError(err).Error("Timezone output is invalid")
		}
	} else {
		log.WithError(err).Warn("Unable to lookup timezones from operating system; using defaults")
		zones = append(zones, "Africa/Abidjan")
		zones = append(zones, "Africa/Accra")
		zones = append(zones, "Africa/Addis_Ababa")
		zones = append(zones, "Africa/Algiers")
		zones = append(zones, "Africa/Asmara")
		zones = append(zones, "Africa/Asmera")
		zones = append(zones, "Africa/Bamako")
		zones = append(zones, "Africa/Bangui")
		zones = append(zones, "Africa/Banjul")
		zones = append(zones, "Africa/Bissau")
		zones = append(zones, "Africa/Blantyre")
		zones = append(zones, "Africa/Brazzaville")
		zones = append(zones, "Africa/Bujumbura")
		zones = append(zones, "Africa/Cairo")
		zones = append(zones, "Africa/Casablanca")
		zones = append(zones, "Africa/Ceuta")
		zones = append(zones, "Africa/Conakry")
		zones = append(zones, "Africa/Dakar")
		zones = append(zones, "Africa/Dar_es_Salaam")
		zones = append(zones, "Africa/Djibouti")
		zones = append(zones, "Africa/Douala")
		zones = append(zones, "Africa/El_Aaiun")
		zones = append(zones, "Africa/Freetown")
		zones = append(zones, "Africa/Gaborone")
		zones = append(zones, "Africa/Harare")
		zones = append(zones, "Africa/Johannesburg")
		zones = append(zones, "Africa/Juba")
		zones = append(zones, "Africa/Kampala")
		zones = append(zones, "Africa/Khartoum")
		zones = append(zones, "Africa/Kigali")
		zones = append(zones, "Africa/Kinshasa")
		zones = append(zones, "Africa/Lagos")
		zones = append(zones, "Africa/Libreville")
		zones = append(zones, "Africa/Lome")
		zones = append(zones, "Africa/Luanda")
		zones = append(zones, "Africa/Lubumbashi")
		zones = append(zones, "Africa/Lusaka")
		zones = append(zones, "Africa/Malabo")
		zones = append(zones, "Africa/Maputo")
		zones = append(zones, "Africa/Maseru")
		zones = append(zones, "Africa/Mbabane")
		zones = append(zones, "Africa/Mogadishu")
		zones = append(zones, "Africa/Monrovia")
		zones = append(zones, "Africa/Nairobi")
		zones = append(zones, "Africa/Ndjamena")
		zones = append(zones, "Africa/Niamey")
		zones = append(zones, "Africa/Nouakchott")
		zones = append(zones, "Africa/Ouagadougou")
		zones = append(zones, "Africa/Porto-Novo")
		zones = append(zones, "Africa/Sao_Tome")
		zones = append(zones, "Africa/Timbuktu")
		zones = append(zones, "Africa/Tripoli")
		zones = append(zones, "Africa/Tunis")
		zones = append(zones, "Africa/Windhoek")
		zones = append(zones, "America/Adak")
		zones = append(zones, "America/Anchorage")
		zones = append(zones, "America/Anguilla")
		zones = append(zones, "America/Antigua")
		zones = append(zones, "America/Araguaina")
		zones = append(zones, "America/Argentina/Buenos_Aires")
		zones = append(zones, "America/Argentina/Catamarca")
		zones = append(zones, "America/Argentina/ComodRivadavia")
		zones = append(zones, "America/Argentina/Cordoba")
		zones = append(zones, "America/Argentina/Jujuy")
		zones = append(zones, "America/Argentina/La_Rioja")
		zones = append(zones, "America/Argentina/Mendoza")
		zones = append(zones, "America/Argentina/Rio_Gallegos")
		zones = append(zones, "America/Argentina/Salta")
		zones = append(zones, "America/Argentina/San_Juan")
		zones = append(zones, "America/Argentina/San_Luis")
		zones = append(zones, "America/Argentina/Tucuman")
		zones = append(zones, "America/Argentina/Ushuaia")
		zones = append(zones, "America/Aruba")
		zones = append(zones, "America/Asuncion")
		zones = append(zones, "America/Atikokan")
		zones = append(zones, "America/Atka")
		zones = append(zones, "America/Bahia")
		zones = append(zones, "America/Bahia_Banderas")
		zones = append(zones, "America/Barbados")
		zones = append(zones, "America/Belem")
		zones = append(zones, "America/Belize")
		zones = append(zones, "America/Blanc-Sablon")
		zones = append(zones, "America/Boa_Vista")
		zones = append(zones, "America/Bogota")
		zones = append(zones, "America/Boise")
		zones = append(zones, "America/Buenos_Aires")
		zones = append(zones, "America/Cambridge_Bay")
		zones = append(zones, "America/Campo_Grande")
		zones = append(zones, "America/Cancun")
		zones = append(zones, "America/Caracas")
		zones = append(zones, "America/Catamarca")
		zones = append(zones, "America/Cayenne")
		zones = append(zones, "America/Cayman")
		zones = append(zones, "America/Chicago")
		zones = append(zones, "America/Chihuahua")
		zones = append(zones, "America/Ciudad_Juarez")
		zones = append(zones, "America/Coral_Harbour")
		zones = append(zones, "America/Cordoba")
		zones = append(zones, "America/Costa_Rica")
		zones = append(zones, "America/Creston")
		zones = append(zones, "America/Cuiaba")
		zones = append(zones, "America/Curacao")
		zones = append(zones, "America/Danmarkshavn")
		zones = append(zones, "America/Dawson")
		zones = append(zones, "America/Dawson_Creek")
		zones = append(zones, "America/Denver")
		zones = append(zones, "America/Detroit")
		zones = append(zones, "America/Dominica")
		zones = append(zones, "America/Edmonton")
		zones = append(zones, "America/Eirunepe")
		zones = append(zones, "America/El_Salvador")
		zones = append(zones, "America/Ensenada")
		zones = append(zones, "America/Fortaleza")
		zones = append(zones, "America/Fort_Nelson")
		zones = append(zones, "America/Fort_Wayne")
		zones = append(zones, "America/Glace_Bay")
		zones = append(zones, "America/Godthab")
		zones = append(zones, "America/Goose_Bay")
		zones = append(zones, "America/Grand_Turk")
		zones = append(zones, "America/Grenada")
		zones = append(zones, "America/Guadeloupe")
		zones = append(zones, "America/Guatemala")
		zones = append(zones, "America/Guayaquil")
		zones = append(zones, "America/Guyana")
		zones = append(zones, "America/Halifax")
		zones = append(zones, "America/Havana")
		zones = append(zones, "America/Hermosillo")
		zones = append(zones, "America/Indiana/Indianapolis")
		zones = append(zones, "America/Indiana/Knox")
		zones = append(zones, "America/Indiana/Marengo")
		zones = append(zones, "America/Indiana/Petersburg")
		zones = append(zones, "America/Indianapolis")
		zones = append(zones, "America/Indiana/Tell_City")
		zones = append(zones, "America/Indiana/Vevay")
		zones = append(zones, "America/Indiana/Vincennes")
		zones = append(zones, "America/Indiana/Winamac")
		zones = append(zones, "America/Inuvik")
		zones = append(zones, "America/Iqaluit")
		zones = append(zones, "America/Jamaica")
		zones = append(zones, "America/Jujuy")
		zones = append(zones, "America/Juneau")
		zones = append(zones, "America/Kentucky/Louisville")
		zones = append(zones, "America/Kentucky/Monticello")
		zones = append(zones, "America/Knox_IN")
		zones = append(zones, "America/Kralendijk")
		zones = append(zones, "America/La_Paz")
		zones = append(zones, "America/Lima")
		zones = append(zones, "America/Los_Angeles")
		zones = append(zones, "America/Louisville")
		zones = append(zones, "America/Lower_Princes")
		zones = append(zones, "America/Maceio")
		zones = append(zones, "America/Managua")
		zones = append(zones, "America/Manaus")
		zones = append(zones, "America/Marigot")
		zones = append(zones, "America/Martinique")
		zones = append(zones, "America/Matamoros")
		zones = append(zones, "America/Mazatlan")
		zones = append(zones, "America/Mendoza")
		zones = append(zones, "America/Menominee")
		zones = append(zones, "America/Merida")
		zones = append(zones, "America/Metlakatla")
		zones = append(zones, "America/Mexico_City")
		zones = append(zones, "America/Miquelon")
		zones = append(zones, "America/Moncton")
		zones = append(zones, "America/Monterrey")
		zones = append(zones, "America/Montevideo")
		zones = append(zones, "America/Montreal")
		zones = append(zones, "America/Montserrat")
		zones = append(zones, "America/Nassau")
		zones = append(zones, "America/New_York")
		zones = append(zones, "America/Nipigon")
		zones = append(zones, "America/Nome")
		zones = append(zones, "America/Noronha")
		zones = append(zones, "America/North_Dakota/Beulah")
		zones = append(zones, "America/North_Dakota/Center")
		zones = append(zones, "America/North_Dakota/New_Salem")
		zones = append(zones, "America/Nuuk")
		zones = append(zones, "America/Ojinaga")
		zones = append(zones, "America/Panama")
		zones = append(zones, "America/Pangnirtung")
		zones = append(zones, "America/Paramaribo")
		zones = append(zones, "America/Phoenix")
		zones = append(zones, "America/Port-au-Prince")
		zones = append(zones, "America/Porto_Acre")
		zones = append(zones, "America/Port_of_Spain")
		zones = append(zones, "America/Porto_Velho")
		zones = append(zones, "America/Puerto_Rico")
		zones = append(zones, "America/Punta_Arenas")
		zones = append(zones, "America/Rainy_River")
		zones = append(zones, "America/Rankin_Inlet")
		zones = append(zones, "America/Recife")
		zones = append(zones, "America/Regina")
		zones = append(zones, "America/Resolute")
		zones = append(zones, "America/Rio_Branco")
		zones = append(zones, "America/Rosario")
		zones = append(zones, "America/Santa_Isabel")
		zones = append(zones, "America/Santarem")
		zones = append(zones, "America/Santiago")
		zones = append(zones, "America/Santo_Domingo")
		zones = append(zones, "America/Sao_Paulo")
		zones = append(zones, "America/Scoresbysund")
		zones = append(zones, "America/Shiprock")
		zones = append(zones, "America/Sitka")
		zones = append(zones, "America/St_Barthelemy")
		zones = append(zones, "America/St_Johns")
		zones = append(zones, "America/St_Kitts")
		zones = append(zones, "America/St_Lucia")
		zones = append(zones, "America/St_Thomas")
		zones = append(zones, "America/St_Vincent")
		zones = append(zones, "America/Swift_Current")
		zones = append(zones, "America/Tegucigalpa")
		zones = append(zones, "America/Thule")
		zones = append(zones, "America/Thunder_Bay")
		zones = append(zones, "America/Tijuana")
		zones = append(zones, "America/Toronto")
		zones = append(zones, "America/Tortola")
		zones = append(zones, "America/Vancouver")
		zones = append(zones, "America/Virgin")
		zones = append(zones, "America/Whitehorse")
		zones = append(zones, "America/Winnipeg")
		zones = append(zones, "America/Yakutat")
		zones = append(zones, "America/Yellowknife")
		zones = append(zones, "Antarctica/Casey")
		zones = append(zones, "Antarctica/Davis")
		zones = append(zones, "Antarctica/DumontDUrville")
		zones = append(zones, "Antarctica/Macquarie")
		zones = append(zones, "Antarctica/Mawson")
		zones = append(zones, "Antarctica/McMurdo")
		zones = append(zones, "Antarctica/Palmer")
		zones = append(zones, "Antarctica/Rothera")
		zones = append(zones, "Antarctica/South_Pole")
		zones = append(zones, "Antarctica/Syowa")
		zones = append(zones, "Antarctica/Troll")
		zones = append(zones, "Antarctica/Vostok")
		zones = append(zones, "Arctic/Longyearbyen")
		zones = append(zones, "Asia/Aden")
		zones = append(zones, "Asia/Almaty")
		zones = append(zones, "Asia/Amman")
		zones = append(zones, "Asia/Anadyr")
		zones = append(zones, "Asia/Aqtau")
		zones = append(zones, "Asia/Aqtobe")
		zones = append(zones, "Asia/Ashgabat")
		zones = append(zones, "Asia/Ashkhabad")
		zones = append(zones, "Asia/Atyrau")
		zones = append(zones, "Asia/Baghdad")
		zones = append(zones, "Asia/Bahrain")
		zones = append(zones, "Asia/Baku")
		zones = append(zones, "Asia/Bangkok")
		zones = append(zones, "Asia/Barnaul")
		zones = append(zones, "Asia/Beirut")
		zones = append(zones, "Asia/Bishkek")
		zones = append(zones, "Asia/Brunei")
		zones = append(zones, "Asia/Calcutta")
		zones = append(zones, "Asia/Chita")
		zones = append(zones, "Asia/Choibalsan")
		zones = append(zones, "Asia/Chongqing")
		zones = append(zones, "Asia/Chungking")
		zones = append(zones, "Asia/Colombo")
		zones = append(zones, "Asia/Dacca")
		zones = append(zones, "Asia/Damascus")
		zones = append(zones, "Asia/Dhaka")
		zones = append(zones, "Asia/Dili")
		zones = append(zones, "Asia/Dubai")
		zones = append(zones, "Asia/Dushanbe")
		zones = append(zones, "Asia/Famagusta")
		zones = append(zones, "Asia/Gaza")
		zones = append(zones, "Asia/Harbin")
		zones = append(zones, "Asia/Hebron")
		zones = append(zones, "Asia/Ho_Chi_Minh")
		zones = append(zones, "Asia/Hong_Kong")
		zones = append(zones, "Asia/Hovd")
		zones = append(zones, "Asia/Irkutsk")
		zones = append(zones, "Asia/Istanbul")
		zones = append(zones, "Asia/Jakarta")
		zones = append(zones, "Asia/Jayapura")
		zones = append(zones, "Asia/Jerusalem")
		zones = append(zones, "Asia/Kabul")
		zones = append(zones, "Asia/Kamchatka")
		zones = append(zones, "Asia/Karachi")
		zones = append(zones, "Asia/Kashgar")
		zones = append(zones, "Asia/Kathmandu")
		zones = append(zones, "Asia/Katmandu")
		zones = append(zones, "Asia/Khandyga")
		zones = append(zones, "Asia/Kolkata")
		zones = append(zones, "Asia/Krasnoyarsk")
		zones = append(zones, "Asia/Kuala_Lumpur")
		zones = append(zones, "Asia/Kuching")
		zones = append(zones, "Asia/Kuwait")
		zones = append(zones, "Asia/Macao")
		zones = append(zones, "Asia/Macau")
		zones = append(zones, "Asia/Magadan")
		zones = append(zones, "Asia/Makassar")
		zones = append(zones, "Asia/Manila")
		zones = append(zones, "Asia/Muscat")
		zones = append(zones, "Asia/Nicosia")
		zones = append(zones, "Asia/Novokuznetsk")
		zones = append(zones, "Asia/Novosibirsk")
		zones = append(zones, "Asia/Omsk")
		zones = append(zones, "Asia/Oral")
		zones = append(zones, "Asia/Phnom_Penh")
		zones = append(zones, "Asia/Pontianak")
		zones = append(zones, "Asia/Pyongyang")
		zones = append(zones, "Asia/Qatar")
		zones = append(zones, "Asia/Qostanay")
		zones = append(zones, "Asia/Qyzylorda")
		zones = append(zones, "Asia/Rangoon")
		zones = append(zones, "Asia/Riyadh")
		zones = append(zones, "Asia/Saigon")
		zones = append(zones, "Asia/Sakhalin")
		zones = append(zones, "Asia/Samarkand")
		zones = append(zones, "Asia/Seoul")
		zones = append(zones, "Asia/Shanghai")
		zones = append(zones, "Asia/Singapore")
		zones = append(zones, "Asia/Srednekolymsk")
		zones = append(zones, "Asia/Taipei")
		zones = append(zones, "Asia/Tashkent")
		zones = append(zones, "Asia/Tbilisi")
		zones = append(zones, "Asia/Tehran")
		zones = append(zones, "Asia/Tel_Aviv")
		zones = append(zones, "Asia/Thimbu")
		zones = append(zones, "Asia/Thimphu")
		zones = append(zones, "Asia/Tokyo")
		zones = append(zones, "Asia/Tomsk")
		zones = append(zones, "Asia/Ujung_Pandang")
		zones = append(zones, "Asia/Ulaanbaatar")
		zones = append(zones, "Asia/Ulan_Bator")
		zones = append(zones, "Asia/Urumqi")
		zones = append(zones, "Asia/Ust-Nera")
		zones = append(zones, "Asia/Vientiane")
		zones = append(zones, "Asia/Vladivostok")
		zones = append(zones, "Asia/Yakutsk")
		zones = append(zones, "Asia/Yangon")
		zones = append(zones, "Asia/Yekaterinburg")
		zones = append(zones, "Asia/Yerevan")
		zones = append(zones, "Atlantic/Azores")
		zones = append(zones, "Atlantic/Bermuda")
		zones = append(zones, "Atlantic/Canary")
		zones = append(zones, "Atlantic/Cape_Verde")
		zones = append(zones, "Atlantic/Faeroe")
		zones = append(zones, "Atlantic/Faroe")
		zones = append(zones, "Atlantic/Jan_Mayen")
		zones = append(zones, "Atlantic/Madeira")
		zones = append(zones, "Atlantic/Reykjavik")
		zones = append(zones, "Atlantic/South_Georgia")
		zones = append(zones, "Atlantic/Stanley")
		zones = append(zones, "Atlantic/St_Helena")
		zones = append(zones, "Australia/ACT")
		zones = append(zones, "Australia/Adelaide")
		zones = append(zones, "Australia/Brisbane")
		zones = append(zones, "Australia/Broken_Hill")
		zones = append(zones, "Australia/Canberra")
		zones = append(zones, "Australia/Currie")
		zones = append(zones, "Australia/Darwin")
		zones = append(zones, "Australia/Eucla")
		zones = append(zones, "Australia/Hobart")
		zones = append(zones, "Australia/LHI")
		zones = append(zones, "Australia/Lindeman")
		zones = append(zones, "Australia/Lord_Howe")
		zones = append(zones, "Australia/Melbourne")
		zones = append(zones, "Australia/North")
		zones = append(zones, "Australia/NSW")
		zones = append(zones, "Australia/Perth")
		zones = append(zones, "Australia/Queensland")
		zones = append(zones, "Australia/South")
		zones = append(zones, "Australia/Sydney")
		zones = append(zones, "Australia/Tasmania")
		zones = append(zones, "Australia/Victoria")
		zones = append(zones, "Australia/West")
		zones = append(zones, "Australia/Yancowinna")
		zones = append(zones, "Brazil/Acre")
		zones = append(zones, "Brazil/DeNoronha")
		zones = append(zones, "Brazil/East")
		zones = append(zones, "Brazil/West")
		zones = append(zones, "Canada/Atlantic")
		zones = append(zones, "Canada/Central")
		zones = append(zones, "Canada/Eastern")
		zones = append(zones, "Canada/Mountain")
		zones = append(zones, "Canada/Newfoundland")
		zones = append(zones, "Canada/Pacific")
		zones = append(zones, "Canada/Saskatchewan")
		zones = append(zones, "Canada/Yukon")
		zones = append(zones, "CET")
		zones = append(zones, "Chile/Continental")
		zones = append(zones, "Chile/EasterIsland")
		zones = append(zones, "CST6CDT")
		zones = append(zones, "Cuba")
		zones = append(zones, "EET")
		zones = append(zones, "Egypt")
		zones = append(zones, "Eire")
		zones = append(zones, "EST")
		zones = append(zones, "EST5EDT")
		zones = append(zones, "Etc/GMT")
		zones = append(zones, "Etc/GMT+0")
		zones = append(zones, "Etc/GMT-0")
		zones = append(zones, "Etc/GMT0")
		zones = append(zones, "Etc/GMT+1")
		zones = append(zones, "Etc/GMT-1")
		zones = append(zones, "Etc/GMT+10")
		zones = append(zones, "Etc/GMT-10")
		zones = append(zones, "Etc/GMT+11")
		zones = append(zones, "Etc/GMT-11")
		zones = append(zones, "Etc/GMT+12")
		zones = append(zones, "Etc/GMT-12")
		zones = append(zones, "Etc/GMT-13")
		zones = append(zones, "Etc/GMT-14")
		zones = append(zones, "Etc/GMT+2")
		zones = append(zones, "Etc/GMT-2")
		zones = append(zones, "Etc/GMT+3")
		zones = append(zones, "Etc/GMT-3")
		zones = append(zones, "Etc/GMT+4")
		zones = append(zones, "Etc/GMT-4")
		zones = append(zones, "Etc/GMT+5")
		zones = append(zones, "Etc/GMT-5")
		zones = append(zones, "Etc/GMT+6")
		zones = append(zones, "Etc/GMT-6")
		zones = append(zones, "Etc/GMT+7")
		zones = append(zones, "Etc/GMT-7")
		zones = append(zones, "Etc/GMT+8")
		zones = append(zones, "Etc/GMT-8")
		zones = append(zones, "Etc/GMT+9")
		zones = append(zones, "Etc/GMT-9")
		zones = append(zones, "Etc/Greenwich")
		zones = append(zones, "Etc/UCT")
		zones = append(zones, "Etc/Universal")
		zones = append(zones, "Etc/UTC")
		zones = append(zones, "Etc/Zulu")
		zones = append(zones, "Europe/Amsterdam")
		zones = append(zones, "Europe/Andorra")
		zones = append(zones, "Europe/Astrakhan")
		zones = append(zones, "Europe/Athens")
		zones = append(zones, "Europe/Belfast")
		zones = append(zones, "Europe/Belgrade")
		zones = append(zones, "Europe/Berlin")
		zones = append(zones, "Europe/Bratislava")
		zones = append(zones, "Europe/Brussels")
		zones = append(zones, "Europe/Bucharest")
		zones = append(zones, "Europe/Budapest")
		zones = append(zones, "Europe/Busingen")
		zones = append(zones, "Europe/Chisinau")
		zones = append(zones, "Europe/Copenhagen")
		zones = append(zones, "Europe/Dublin")
		zones = append(zones, "Europe/Gibraltar")
		zones = append(zones, "Europe/Guernsey")
		zones = append(zones, "Europe/Helsinki")
		zones = append(zones, "Europe/Isle_of_Man")
		zones = append(zones, "Europe/Istanbul")
		zones = append(zones, "Europe/Jersey")
		zones = append(zones, "Europe/Kaliningrad")
		zones = append(zones, "Europe/Kiev")
		zones = append(zones, "Europe/Kirov")
		zones = append(zones, "Europe/Kyiv")
		zones = append(zones, "Europe/Lisbon")
		zones = append(zones, "Europe/Ljubljana")
		zones = append(zones, "Europe/London")
		zones = append(zones, "Europe/Luxembourg")
		zones = append(zones, "Europe/Madrid")
		zones = append(zones, "Europe/Malta")
		zones = append(zones, "Europe/Mariehamn")
		zones = append(zones, "Europe/Minsk")
		zones = append(zones, "Europe/Monaco")
		zones = append(zones, "Europe/Moscow")
		zones = append(zones, "Europe/Nicosia")
		zones = append(zones, "Europe/Oslo")
		zones = append(zones, "Europe/Paris")
		zones = append(zones, "Europe/Podgorica")
		zones = append(zones, "Europe/Prague")
		zones = append(zones, "Europe/Riga")
		zones = append(zones, "Europe/Rome")
		zones = append(zones, "Europe/Samara")
		zones = append(zones, "Europe/San_Marino")
		zones = append(zones, "Europe/Sarajevo")
		zones = append(zones, "Europe/Saratov")
		zones = append(zones, "Europe/Simferopol")
		zones = append(zones, "Europe/Skopje")
		zones = append(zones, "Europe/Sofia")
		zones = append(zones, "Europe/Stockholm")
		zones = append(zones, "Europe/Tallinn")
		zones = append(zones, "Europe/Tirane")
		zones = append(zones, "Europe/Tiraspol")
		zones = append(zones, "Europe/Ulyanovsk")
		zones = append(zones, "Europe/Uzhgorod")
		zones = append(zones, "Europe/Vaduz")
		zones = append(zones, "Europe/Vatican")
		zones = append(zones, "Europe/Vienna")
		zones = append(zones, "Europe/Vilnius")
		zones = append(zones, "Europe/Volgograd")
		zones = append(zones, "Europe/Warsaw")
		zones = append(zones, "Europe/Zagreb")
		zones = append(zones, "Europe/Zaporozhye")
		zones = append(zones, "Europe/Zurich")
		zones = append(zones, "GB")
		zones = append(zones, "GB-Eire")
		zones = append(zones, "GMT")
		zones = append(zones, "GMT+0")
		zones = append(zones, "GMT-0")
		zones = append(zones, "GMT0")
		zones = append(zones, "Greenwich")
		zones = append(zones, "Hongkong")
		zones = append(zones, "HST")
		zones = append(zones, "Iceland")
		zones = append(zones, "Indian/Antananarivo")
		zones = append(zones, "Indian/Chagos")
		zones = append(zones, "Indian/Christmas")
		zones = append(zones, "Indian/Cocos")
		zones = append(zones, "Indian/Comoro")
		zones = append(zones, "Indian/Kerguelen")
		zones = append(zones, "Indian/Mahe")
		zones = append(zones, "Indian/Maldives")
		zones = append(zones, "Indian/Mauritius")
		zones = append(zones, "Indian/Mayotte")
		zones = append(zones, "Indian/Reunion")
		zones = append(zones, "Iran")
		zones = append(zones, "Israel")
		zones = append(zones, "Jamaica")
		zones = append(zones, "Japan")
		zones = append(zones, "Kwajalein")
		zones = append(zones, "Libya")
		zones = append(zones, "MET")
		zones = append(zones, "Mexico/BajaNorte")
		zones = append(zones, "Mexico/BajaSur")
		zones = append(zones, "Mexico/General")
		zones = append(zones, "MST")
		zones = append(zones, "MST7MDT")
		zones = append(zones, "Navajo")
		zones = append(zones, "NZ")
		zones = append(zones, "NZ-CHAT")
		zones = append(zones, "Pacific/Apia")
		zones = append(zones, "Pacific/Auckland")
		zones = append(zones, "Pacific/Bougainville")
		zones = append(zones, "Pacific/Chatham")
		zones = append(zones, "Pacific/Chuuk")
		zones = append(zones, "Pacific/Easter")
		zones = append(zones, "Pacific/Efate")
		zones = append(zones, "Pacific/Enderbury")
		zones = append(zones, "Pacific/Fakaofo")
		zones = append(zones, "Pacific/Fiji")
		zones = append(zones, "Pacific/Funafuti")
		zones = append(zones, "Pacific/Galapagos")
		zones = append(zones, "Pacific/Gambier")
		zones = append(zones, "Pacific/Guadalcanal")
		zones = append(zones, "Pacific/Guam")
		zones = append(zones, "Pacific/Honolulu")
		zones = append(zones, "Pacific/Johnston")
		zones = append(zones, "Pacific/Kanton")
		zones = append(zones, "Pacific/Kiritimati")
		zones = append(zones, "Pacific/Kosrae")
		zones = append(zones, "Pacific/Kwajalein")
		zones = append(zones, "Pacific/Majuro")
		zones = append(zones, "Pacific/Marquesas")
		zones = append(zones, "Pacific/Midway")
		zones = append(zones, "Pacific/Nauru")
		zones = append(zones, "Pacific/Niue")
		zones = append(zones, "Pacific/Norfolk")
		zones = append(zones, "Pacific/Noumea")
		zones = append(zones, "Pacific/Pago_Pago")
		zones = append(zones, "Pacific/Palau")
		zones = append(zones, "Pacific/Pitcairn")
		zones = append(zones, "Pacific/Pohnpei")
		zones = append(zones, "Pacific/Ponape")
		zones = append(zones, "Pacific/Port_Moresby")
		zones = append(zones, "Pacific/Rarotonga")
		zones = append(zones, "Pacific/Saipan")
		zones = append(zones, "Pacific/Samoa")
		zones = append(zones, "Pacific/Tahiti")
		zones = append(zones, "Pacific/Tarawa")
		zones = append(zones, "Pacific/Tongatapu")
		zones = append(zones, "Pacific/Truk")
		zones = append(zones, "Pacific/Wake")
		zones = append(zones, "Pacific/Wallis")
		zones = append(zones, "Pacific/Yap")
		zones = append(zones, "Poland")
		zones = append(zones, "Portugal")
		zones = append(zones, "PRC")
		zones = append(zones, "PST8PDT")
		zones = append(zones, "ROC")
		zones = append(zones, "ROK")
		zones = append(zones, "SECURITY")
		zones = append(zones, "Singapore")
		zones = append(zones, "Turkey")
		zones = append(zones, "UCT")
		zones = append(zones, "Universal")
		zones = append(zones, "US/Alaska")
		zones = append(zones, "US/Aleutian")
		zones = append(zones, "US/Arizona")
		zones = append(zones, "US/Central")
		zones = append(zones, "US/Eastern")
		zones = append(zones, "US/East-Indiana")
		zones = append(zones, "US/Hawaii")
		zones = append(zones, "US/Indiana-Starke")
		zones = append(zones, "US/Michigan")
		zones = append(zones, "US/Mountain")
		zones = append(zones, "US/Pacific")
		zones = append(zones, "US/Samoa")
		zones = append(zones, "UTC")
		zones = append(zones, "WET")
		zones = append(zones, "W-SU")
		zones = append(zones, "Zulu")
	}
	return zones
}

func Ptr[T any](x T) *T {
	return &x
}

func Copy[T any](x *T) *T {
	if x == nil {
		return nil
	}

	return Ptr(*x)
}
