// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/elastic/go-elasticsearch/v8/esutil (interfaces: BulkIndexer)
//
// Generated by this command:
//
//	mockgen -destination mock/mock_bulkindexer.go -package mock github.com/elastic/go-elasticsearch/v8/esutil BulkIndexer
//
// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	esutil "github.com/elastic/go-elasticsearch/v8/esutil"
	gomock "go.uber.org/mock/gomock"
)

// MockBulkIndexer is a mock of BulkIndexer interface.
type MockBulkIndexer struct {
	ctrl     *gomock.Controller
	recorder *MockBulkIndexerMockRecorder
}

// MockBulkIndexerMockRecorder is the mock recorder for MockBulkIndexer.
type MockBulkIndexerMockRecorder struct {
	mock *MockBulkIndexer
}

// NewMockBulkIndexer creates a new mock instance.
func NewMockBulkIndexer(ctrl *gomock.Controller) *MockBulkIndexer {
	mock := &MockBulkIndexer{ctrl: ctrl}
	mock.recorder = &MockBulkIndexerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBulkIndexer) EXPECT() *MockBulkIndexerMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockBulkIndexer) Add(arg0 context.Context, arg1 esutil.BulkIndexerItem) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockBulkIndexerMockRecorder) Add(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockBulkIndexer)(nil).Add), arg0, arg1)
}

// Close mocks base method.
func (m *MockBulkIndexer) Close(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockBulkIndexerMockRecorder) Close(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBulkIndexer)(nil).Close), arg0)
}

// Stats mocks base method.
func (m *MockBulkIndexer) Stats() esutil.BulkIndexerStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stats")
	ret0, _ := ret[0].(esutil.BulkIndexerStats)
	return ret0
}

// Stats indicates an expected call of Stats.
func (mr *MockBulkIndexerMockRecorder) Stats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stats", reflect.TypeOf((*MockBulkIndexer)(nil).Stats))
}
